<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ÎåÄÌïôÎèÑÏÑúÍ¥Ä - Î©îÏù∏</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            line-height: 1.6;
            color: #333;
            /* Changed: Background to off-white */
            background: #f4f7f6;
            min-height: 100vh;
        }

        .header {
            background: rgba(255, 255, 255, 0.98);
            padding: 1rem 0;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: bold;
            color: #4a5568;
        }

        .nav-links {
            display: flex;
            gap: 2rem;
            list-style: none;
        }

        .nav-links a {
            text-decoration: none;
            color: #4a5568;
            font-weight: 500;
            transition: color 0.3s;
        }

        .nav-links a:hover {
            color: #667eea;
        }

        .auth-buttons {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s;
        }

        .btn-primary {
            background: #667eea;
            color: white;
        }

        .btn-secondary {
            background: transparent;
            color: #667eea;
            border: 2px solid #667eea;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .hero {
            text-align: center;
            /* Changed: Hero text color to dark */
            color: #4a5568;
            margin: 3rem 0;
        }

        .hero h1 {
            font-size: 3rem;
            margin-bottom: 1rem;
            /* Changed: Removed text shadow */
            text-shadow: none;
        }

        .hero p {
            font-size: 1.2rem;
            margin-bottom: 2rem;
            opacity: 0.9;
        }

        /* --- Changed: New main layout structure --- */
        .main-sections {
            display: grid;
            grid-template-columns: 2fr 1.2fr;
            gap: 2rem;
            margin: 3rem 0;
        }

        .section-card {
            /* Changed: Card background to blue gradient */
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: #ffffff; /* Changed: Default text color inside cards to white */
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            transition: transform 0.3s;
            display: flex;
            flex-direction: column;
        }
        
        /* --- Added: New grid placement rules --- */
        #books {
            grid-column: 1 / 3; /* Span across both columns */
            grid-row: 1 / 2;
        }
        #reading-room {
            grid-column: 1 / 2;
            grid-row: 2 / 3;
        }
        #services {
            grid-column: 2 / 3;
            grid-row: 2 / 3;
        }

        .section-card:hover {
            transform: translateY(-5px);
        }

        .section-title {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            /* Changed: Section title to white */
            color: #ffffff;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        /* --- Changed: Search bar style for new background --- */
        .search_wrap {
            display: flex;
            width: 100%;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 10px;
            overflow: hidden;
            transition: background-color 0.3s;
        }
        .search_wrap:focus-within {
            background: rgba(255, 255, 255, 0.2);
        }
        .search_wrap select, .search_wrap input, .search_wrap button {
            border: none;
            background: transparent;
            font-size: 1rem;
            padding: 0.8rem;
            color: #ffffff;
        }
        .search_wrap select {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            background: transparent url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23ffffff%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E') no-repeat right 15px center;
            background-size: 10px;
            padding-right: 35px;
            font-weight: 500;
        }
        .search_wrap select option {
             color: #333; /* Dropdown options should be dark */
        }
        .search_wrap input { flex-grow: 1; padding-left: 0.5rem; }
        .search_wrap input::placeholder { color: #e0e0e0; opacity: 1; }
        .search_wrap input:focus, .search_wrap select:focus { outline: none; }

        .search_wrap .searchBtn {
            cursor: pointer;
            padding: 0 1rem;
            background-image: url('data:image/svg+xml;charset=UTF-8,%3csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="white" width="24px" height="24px"%3e%3cpath d="M0 0h24v24H0z" fill="none"/%3e%3cpath d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/%3e%3c/svg%3e');
            background-repeat: no-repeat;
            background-position: center;
            font-size: 0; 
        }

        .reading-room-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(30px, 1fr));
            gap: 5px; margin: 1rem 0; flex-grow: 1;
        }
        .seat { width: 100%; padding-top: 100%; position: relative; border-radius: 5px; cursor: pointer; transition: all 0.3s; }
        .seat-content { position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center; font-size: 0.8rem; color: white; font-weight: bold; }
        .seat.available { background: #48bb78; }
        .seat.occupied { background: #e53e3e; cursor: not-allowed; }
        .seat.selected { background: #3182ce; transform: scale(1.1); }
        .status-info { display: flex; justify-content: space-around; margin: 1rem 0; font-size: 0.9rem; }
        .status-item { display: flex; align-items: center; gap: 0.3rem; }
        .status-dot { width: 12px; height: 12px; border-radius: 50%; }

        .quick-actions { display: grid; grid-template-columns: repeat(2, 1fr); gap: 1rem; margin-top: auto; }
        .action-btn {
            padding: 1rem; background: rgba(255, 255, 255, 0.9); border: none;
            border-radius: 10px; cursor: pointer; text-align: center;
            transition: all 0.3s; font-weight: 500; color: #4a5568; font-size: 0.9rem;
        }
        .action-btn:hover { background: #ffffff; color: #667eea; transform: translateY(-3px); }

        .modal { display: none; position: fixed; z-index: 2000; left: 0; top: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); }
        .modal-content { background: white; margin: 10% auto; padding: 2rem; border-radius: 15px; width: 90%; max-width: 400px; position: relative; }
        .close { position: absolute; right: 1rem; top: 1rem; font-size: 1.5rem; cursor: pointer; color: #999; }
        .form-group { margin-bottom: 1rem; }
        .form-group label { display: block; margin-bottom: 0.3rem; color: #4a5568; font-weight: 500; }
        .form-group input, .form-group select { width: 100%; padding: 0.8rem; border: 2px solid #e2e8f0; border-radius: 5px; font-size: 1rem; }
        .form-group input:focus, .form-group select:focus { outline: none; border-color: #667eea; }
        .notification { position: fixed; top: 100px; right: 20px; background: #48bb78; color: white; padding: 1rem; border-radius: 10px; display: none; z-index: 3000; }
        
        @media (max-width: 768px) {
            .nav { flex-direction: column; gap: 1rem; }
            .hero h1 { font-size: 2rem; }
            .main-sections { grid-template-columns: 1fr; }
            #reading-room, #books, #services { grid-column: auto; grid-row: auto; } /* Reset grid placement on mobile */
            .reading-room-grid { grid-template-columns: repeat(8, 1fr); }
            .search_wrap { flex-direction: column; border-radius: 10px; background: rgba(255,255,255,0.1); border-color: rgba(255,255,255,0.3); }
            .search_wrap select, .search_wrap button { border-radius: 0;}
            .search_wrap select { border-bottom: 1px solid rgba(255,255,255,0.3); }
        }
    </style>
</head>
<body>
    <header class="header">
        <nav class="nav">
            <div class="logo">üìö ÎåÄÌïôÎèÑÏÑúÍ¥Ä</div>
            <ul class="nav-links">
                <li><a href="#home">Ìôà</a></li>
                <li><a href="#books">ÎèÑÏÑúÍ≤ÄÏÉâ</a></li>
                <li><a href="#reading-room">Ïó¥ÎûåÏã§</a></li>
                <li><a href="#services">ÏÑúÎπÑÏä§</a></li>
                <li><a href="#notice">Í≥µÏßÄÏÇ¨Ìï≠</a></li>
            </ul>
            <div class="auth-buttons">
                <button class="btn btn-secondary" onclick="openModal('loginModal')">Î°úÍ∑∏Ïù∏</button>
                <button class="btn btn-primary" onclick="openModal('signupModal')">ÌöåÏõêÍ∞ÄÏûÖ</button>
            </div>
        </nav>
    </header>

    <div class="container">
        <section class="hero" id="home">
            <h1>ÏßÄÏãùÏùò Î≥¥Í≥†, ÎåÄÌïôÎèÑÏÑúÍ¥Ä</h1>
            <p>ÏµúÏã† ÎèÑÏÑúÍ≤ÄÏÉâÎ∂ÄÌÑ∞ Ìé∏Î¶¨Ìïú Ïó¥ÎûåÏã§ ÏòàÏïΩÍπåÏßÄ, Î™®Îì† ÌïôÏäµ ÏÑúÎπÑÏä§Î•º Ìïú Í≥≥ÏóêÏÑú</p>
        </section>

        <div class="main-sections">
            <div class="section-card" id="books">
                <h2 class="section-title">üìñ ÎèÑÏÑúÍ≤ÄÏÉâ</h2>
                <div class="searchbox">
                    <div class="search_wrap">
                        <label for="srchDsc" class="visually-hidden">Í≤ÄÏÉâ Ï°∞Í±¥</label>
                        <select id="srchDsc" name="srchDsc">
                            <option value="Í∏∞Î≥∏Í≤ÄÏÉâ" selected>Í∏∞Î≥∏Í≤ÄÏÉâ</option>
                            <option value="Ï†ÑÏ≤¥">Ï†ÑÏ≤¥(Ï¥àÎ°ù¬∑Î™©Ï∞®¬∑Î≥∏Î¨∏Ìè¨Ìï®)</option>
                            <option value="ÏûêÎ£åÎ™Ö">ÏûêÎ£åÎ™Ö</option>
                            <option value="Ï†ÄÏûê">Ï†ÄÏûê</option>
                            <option value="Î∞úÌñâÏûê">Î∞úÌñâÏûê</option>
                            <option value="ÌÇ§ÏõåÎìú">ÌÇ§ÏõåÎìú</option>
                        </select>
                        <label for="srchKeyword" class="visually-hidden">Í≤ÄÏÉâÏñ¥ ÏûÖÎ†•</label>
                        <input type="text" id="srchKeyword" name="srchKeyword" placeholder="Ï†ïÎ≥¥Í≤ÄÏÉâ" title="Ï†ïÎ≥¥Í≤ÄÏÉâ"/>
                        <button type="button" class="btn searchBtn">Í≤ÄÏÉâ</button>
                    </div>
                </div>
                <div style="margin-top: 1.5rem; font-size: 0.9rem; color: #e0e0e0; padding-left: 5px;">
                    <p>üìç Ïã§ÏãúÍ∞Ñ ÎèÑÏÑúÏúÑÏπò ÌôïÏù∏ Í∞ÄÎä•</p>
                    <p>‚≠ê ÌèâÏ†ê Î∞è Î¶¨Î∑∞ Í∏∞Î∞ò Ï∂îÏ≤úÎèÑÏÑú</p>
                    <p>üè´ ÌïôÍ≥ºÎ≥Ñ Ï†ÑÎ¨∏ÎèÑÏÑú Íµ¨Î∂Ñ</p>
                </div>
            </div>

            <div class="section-card" id="reading-room">
                <h2 class="section-title">ü™ë Ïó¥ÎûåÏã§ Ïù¥Ïö©ÌòÑÌô©</h2>
                <div class="status-info">
                    <div class="status-item"><div class="status-dot" style="background: #48bb78;"></div><span>Ïù¥Ïö©Í∞ÄÎä• <strong id="availableSeats">100</strong></span></div>
                    <div class="status-item"><div class="status-dot" style="background: #e53e3e;"></div><span>ÏÇ¨Ïö©Ï§ë <strong id="occupiedSeats">0</strong></span></div>
                </div>
                <div class="reading-room-grid" id="readingRoomGrid"></div>
                <button class="btn btn-primary" style="width: 100%; margin-top: auto;" onclick="openSeatSelection()">Ï¢åÏÑù ÏÑ†ÌÉù Î∞è ÏòàÏïΩ</button>
            </div>

            <div class="section-card" id="services">
                <h2 class="section-title">üë§ Í∞úÏù∏ÏÑúÎπÑÏä§</h2>
                <div style="color: #e0e0e0;">
                    <h4 style="margin-bottom: 0.5rem; color: #ffffff;">üì± Í∞úÏù∏ ÎßûÏ∂§ ÏÑúÎπÑÏä§</h4>
                    <ul style="font-size: 0.9rem; list-style: none; padding-left: 0;">
                        <li style="margin-bottom: 0.3rem;">üîî Ïã†Í∞ÑÎèÑÏÑú ÏïåÎ¶º</li>
                        <li style="margin-bottom: 0.3rem;">üìß Î∞òÎÇ©Ïùº Ïù¥Î©îÏùº/SMS ÏïàÎÇ¥</li>
                        <li style="margin-bottom: 0.3rem;">üèÜ Ïù¥Îã¨Ïùò Î≤†Ïä§Ìä∏ Î¶¨Î∑∞Ïñ¥</li>
                    </ul>
                </div>
                <div class="quick-actions">
                    <button class="action-btn" onclick="showMyLoans()">üìö<br>ÎåÄÏ∂úÌòÑÌô©</button>
                    <button class="action-btn" onclick="showReservations()">üìÖ<br>ÏòàÏïΩÌòÑÌô©</button>
                    <button class="action-btn" onclick="showRecommendations()">‚≠ê<br>Ï∂îÏ≤úÎèÑÏÑú</button>
                    <button class="action-btn" onclick="openMessages()">üí¨<br>Î©îÏãúÏßÄ</button>
                </div>
            </div>
        </div>

        <div class="section-card" id="notice">
            <h2 class="section-title">üì¢ Í≥µÏßÄÏÇ¨Ìï≠ Î∞è ÏÉàÏÜåÏãù</h2>
            <div style="border-left: 4px solid #ffffff; padding-left: 1rem; margin: 1rem 0;">
                <h4 style="color: #ffffff; margin-bottom: 0.5rem;">üìö 2025ÎÖÑ ÏÉÅÎ∞òÍ∏∞ Ïã†Í∞ÑÎèÑÏÑú ÏûÖÍ≥† ÏïàÎÇ¥</h4>
                <p style="color: #e0e0e0; font-size: 0.9rem;">ÏµúÏã† Ï†ÑÎ¨∏ÏÑúÏ†Å 150Í∂åÏù¥ ÏÉàÎ°ú ÏûÖÍ≥†ÎêòÏóàÏäµÎãàÎã§.</p>
                <small style="color: #cccccc;">2025.09.15</small>
            </div>
            <div style="border-left: 4px solid #48bb78; padding-left: 1rem; margin: 1rem 0;">
                <h4 style="color: #ffffff; margin-bottom: 0.5rem;">ü™ë Ïó¥ÎûåÏã§ Ïö¥ÏòÅÏãúÍ∞Ñ Ïó∞Ïû• ÏïàÎÇ¥</h4>
                <p style="color: #e0e0e0; font-size: 0.9rem;">Ï§ëÍ∞ÑÍ≥†ÏÇ¨ Í∏∞Í∞Ñ(10/14~10/25) ÎèôÏïà 24ÏãúÍ∞Ñ Ïö¥ÏòÅÌï©ÎãàÎã§.</p>
                <small style="color: #cccccc;">2025.09.10</small>
            </div>
        </div>
    </div>

    <div id="loginModal" class="modal"><div class="modal-content"><span class="close" onclick="closeModal('loginModal')">&times;</span><h2 style="margin-bottom:1.5rem;">Î°úÍ∑∏Ïù∏</h2><form id="loginForm"><div class="form-group"><label for="loginId">ÌïôÎ≤à/ÍµêÏßÅÏõêÎ≤àÌò∏</label><input type="text" id="loginId" required></div><div class="form-group"><label for="loginPassword">ÎπÑÎ∞ÄÎ≤àÌò∏</label><input type="password" id="loginPassword" required></div><button type="submit" class="btn btn-primary" style="width:100%;margin-top:1rem;">Î°úÍ∑∏Ïù∏</button></form><div style="text-align:center;margin-top:1rem;"><a href="#" style="color:#667eea;text-decoration:none;font-size:0.9rem;">ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûäÏúºÏÖ®ÎÇòÏöî?</a></div></div></div>
    <div id="signupModal" class="modal"><div class="modal-content"><span class="close" onclick="closeModal('signupModal')">&times;</span><h2 style="margin-bottom:1.5rem;">ÌöåÏõêÍ∞ÄÏûÖ</h2><form id="signupForm"><div class="form-group"><label for="signupId">ÌïôÎ≤à/ÍµêÏßÅÏõêÎ≤àÌò∏</label><input type="text" id="signupId" required></div><div class="form-group"><label for="signupName">Ïù¥Î¶Ñ</label><input type="text" id="signupName" required></div><div class="form-group"><label for="signupDept">ÏÜåÏÜç</label><select id="signupDept" required><option value="">ÏÑ†ÌÉù</option><option value="Ïª¥Ìì®ÌÑ∞Í≥µÌïôÍ≥º">Ïª¥Ìì®ÌÑ∞Í≥µÌïôÍ≥º</option><option value="Í≤ΩÏòÅÌïôÍ≥º">Í≤ΩÏòÅÌïôÍ≥º</option></select></div><div class="form-group"><label for="signupPassword">ÎπÑÎ∞ÄÎ≤àÌò∏</label><input type="password" id="signupPassword" required></div><button type="submit" class="btn btn-primary" style="width:100%;margin-top:1rem;">ÌöåÏõêÍ∞ÄÏûÖ</button></form></div></div>
    <div id="notification" class="notification"></div>

    <script>
        let selectedSeat = null, currentUser = null, reservedSeats = {}, users = {};
        function initializeReadingRoom() { const grid = document.getElementById('readingRoomGrid'), t = 100; grid.innerHTML = ''; for (let i = 1; i <= t; i++) { const e = document.createElement('div'); e.className = 'seat available'; const n = document.createElement('div'); n.className = 'seat-content', n.textContent = i, e.appendChild(n), e.addEventListener('click', () => selectSeat(i, e)), grid.appendChild(e) } updateSeatStatus() }
        function selectSeat(t, e) { e.classList.contains('occupied') || (document.querySelectorAll('.seat.selected').forEach(t => t.classList.remove('selected')), e.classList.add('selected'), selectedSeat = t) }
        function updateSeatStatus() { const t = Object.keys(reservedSeats).length; document.getElementById('availableSeats').textContent = 100 - t, document.getElementById('occupiedSeats').textContent = t }
        function openSeatSelection() { if (!currentUser) return showNotification('Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌïú ÏÑúÎπÑÏä§ÏûÖÎãàÎã§.', 'error'), void openModal('loginModal'); const t = getUserReservedSeat(currentUser.id); if (t) return void(confirm(`ÌòÑÏû¨ ${t}Î≤à Ï¢åÏÑùÏùÑ ÏòàÏïΩÏ§ëÏûÖÎãàÎã§.\nÏ¢åÏÑùÏùÑ Î∞òÎÇ©ÌïòÏãúÍ≤†ÏäµÎãàÍπå?`) && returnSeat(t)); if (!selectedSeat) return void showNotification('Î®ºÏ†Ä Ï¢åÏÑùÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.', 'warning'); confirm(`${selectedSeat}Î≤à Ï¢åÏÑùÏùÑ ÏòàÏïΩÌïòÏãúÍ≤†ÏäµÎãàÍπå?`) && (document.querySelector(`.seat:nth-child(${selectedSeat})`).classList.replace('available', 'occupied'), reservedSeats[selectedSeat] = { userId: currentUser.id, userName: currentUser.name }, selectedSeat = null, updateSeatStatus(), updateReservationButton(), showNotification('Ï¢åÏÑù ÏòàÏïΩÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.', 'success')) }
        function getUserReservedSeat(t) { for (const [e, n] of Object.entries(reservedSeats)) if (n.userId === t) return parseInt(e); return null }
        function returnSeat(t) { document.querySelector(`.seat:nth-child(${t})`).classList.replace('occupied', 'available'), delete reservedSeats[t], updateSeatStatus(), updateReservationButton(), showNotification('Ï¢åÏÑù Î∞òÎÇ©Ïù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.', 'success') }
        function updateReservationButton() { const t = document.querySelector('button[onclick="openSeatSelection()"]'); if (currentUser) { const e = getUserReservedSeat(currentUser.id); t.textContent = e ? `Ï¢åÏÑù ${e}Î≤à Î∞òÎÇ©ÌïòÍ∏∞` : 'Ï¢åÏÑù ÏÑ†ÌÉù Î∞è ÏòàÏïΩ', t.style.background = e ? '#e53e3e' : '#667eea' } }
        function librarySearch() { const t = document.getElementById('srchKeyword').value.trim(), e = document.getElementById('srchDsc').value; t ? (showNotification(`'${e}'ÏóêÏÑú '${t}' Í≤ÄÏÉâ Ï§ë...`, 'info'), setTimeout(() => showNotification('Í≤ÄÏÉâÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.', 'success'), 1500)) : showNotification('Í≤ÄÏÉâÏñ¥Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.', 'warning') }
        function showMyLoans() { if (currentUser) showNotification('ÎåÄÏ∂úÏ§ëÏù∏ ÎèÑÏÑú: 3Í∂å', 'info'); else { showNotification('Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§.', 'error'); openModal('loginModal') } }
        function showReservations() { if (!currentUser) return showNotification('Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§.', 'error'), void openModal('loginModal'); const t = getUserReservedSeat(currentUser.id); showNotification(t ? `ÏòàÏïΩÌòÑÌô©: Ïó¥ÎûåÏã§ ${t}Î≤à` : 'ÏòàÏïΩ ÎÇ¥Ïó≠Ïù¥ ÏóÜÏäµÎãàÎã§.', 'info') }
        function showRecommendations() { showNotification('Ï∂îÏ≤úÎèÑÏÑú: "ÌÅ¥Î¶∞ÏΩîÎìú"', 'info') }
        function openMessages() { if (currentUser) showNotification('ÏÉà Î©îÏãúÏßÄ: 2Í∞ú', 'info'); else { showNotification('Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§.', 'error'); openModal('loginModal') } }
        function openModal(t) { document.getElementById(t).style.display = 'block' }
        function closeModal(t) { document.getElementById(t).style.display = 'none' }
        window.onclick = t => { t.target.classList.contains('modal') && (t.target.style.display = 'none') };
        document.getElementById('loginForm').addEventListener('submit', function(t) { t.preventDefault(); const e = document.getElementById('loginId').value, n = document.getElementById('loginPassword').value, o = users[e]; o && o.password === n ? (currentUser = o, closeModal('loginModal'), showNotification(`${currentUser.name}Îãò, ÌôòÏòÅÌï©ÎãàÎã§!`, 'success'), this.reset(), document.querySelector('.auth-buttons').innerHTML = `<span style="margin-right: 1rem; color: #4a5568;">ÏïàÎÖïÌïòÏÑ∏Ïöî, ${currentUser.name}Îãò</span><button class="btn btn-secondary" onclick="logout()">Î°úÍ∑∏ÏïÑÏõÉ</button>`, updateReservationButton()) : showNotification('ÌïôÎ≤à ÎòêÎäî ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏùºÏπòÌïòÏßÄ ÏïäÏäµÎãàÎã§.', 'error') });
        document.getElementById('signupForm').addEventListener('submit', function(t) { t.preventDefault(); const e = document.getElementById('signupId').value; if (users[e]) return void showNotification('Ïù¥ÎØ∏ Í∞ÄÏûÖÎêú ÌïôÎ≤àÏûÖÎãàÎã§.', 'error'); users[e] = { id: e, name: signupName.value, dept: signupDept.value, password: signupPassword.value }, closeModal('signupModal'), showNotification('ÌöåÏõêÍ∞ÄÏûÖÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.', 'success'), this.reset() });
        function logout() { if (currentUser) { const t = getUserReservedSeat(currentUser.id); t && returnSeat(t) } currentUser = null, document.querySelector('.auth-buttons').innerHTML = `<button class="btn btn-secondary" onclick="openModal('loginModal')">Î°úÍ∑∏Ïù∏</button><button class="btn btn-primary" onclick="openModal('signupModal')">ÌöåÏõêÍ∞ÄÏûÖ</button>`; const t = document.querySelector('button[onclick="openSeatSelection()"]'); t.textContent = 'Ï¢åÏÑù ÏÑ†ÌÉù Î∞è ÏòàÏïΩ', t.style.background = '#667eea', showNotification('Î°úÍ∑∏ÏïÑÏõÉÎêòÏóàÏäµÎãàÎã§.', 'info') }
        function showNotification(t, e = 'info') { const n = document.getElementById('notification'); n.textContent = t, n.style.display = 'block', n.style.background = { success: '#48bb78', error: '#e53e3e', warning: '#ed8936', info: '#4299e1' }[e] || '#4299e1', setTimeout(() => { n.style.display = 'none' }, 3e3) }
        document.addEventListener('DOMContentLoaded', function() { initializeReadingRoom(), document.querySelector('.searchBtn').addEventListener('click', librarySearch), document.getElementById('srchKeyword').addEventListener('keypress', t => { 'Enter' === t.key && librarySearch() }), document.querySelectorAll('.nav-links a').forEach(t => t.addEventListener('click', function(t) { t.preventDefault(); const e = document.querySelector(this.getAttribute('href')); e && e.scrollIntoView({ behavior: 'smooth' }) })) });
    </script>
</body>
</html>
